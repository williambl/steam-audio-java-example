/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.valvesoftware.phonon;

public class IPLDirectivity {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IPLDirectivity(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPLDirectivity obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        phononJNI.delete_IPLDirectivity(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setDipoleWeight(float value) {
    phononJNI.IPLDirectivity_dipoleWeight_set(swigCPtr, this, value);
  }

  public float getDipoleWeight() {
    return phononJNI.IPLDirectivity_dipoleWeight_get(swigCPtr, this);
  }

  public void setDipolePower(float value) {
    phononJNI.IPLDirectivity_dipolePower_set(swigCPtr, this, value);
  }

  public float getDipolePower() {
    return phononJNI.IPLDirectivity_dipolePower_get(swigCPtr, this);
  }

  public void setCallback(SWIGTYPE_p_f_IPLVector3_p_void__float value) {
    phononJNI.IPLDirectivity_callback_set(swigCPtr, this, SWIGTYPE_p_f_IPLVector3_p_void__float.getCPtr(value));
  }

  public SWIGTYPE_p_f_IPLVector3_p_void__float getCallback() {
    long cPtr = phononJNI.IPLDirectivity_callback_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_IPLVector3_p_void__float(cPtr, false);
  }

  public void setUserData(SWIGTYPE_p_void value) {
    phononJNI.IPLDirectivity_userData_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getUserData() {
    long cPtr = phononJNI.IPLDirectivity_userData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public IPLDirectivity() {
    this(phononJNI.new_IPLDirectivity(), true);
  }

}
