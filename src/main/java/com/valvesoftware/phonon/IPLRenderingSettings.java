/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.valvesoftware.phonon;

public class IPLRenderingSettings {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected IPLRenderingSettings(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPLRenderingSettings obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        phononJNI.delete_IPLRenderingSettings(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setSamplingRate(int value) {
    phononJNI.IPLRenderingSettings_samplingRate_set(swigCPtr, this, value);
  }

  public int getSamplingRate() {
    return phononJNI.IPLRenderingSettings_samplingRate_get(swigCPtr, this);
  }

  public void setFrameSize(int value) {
    phononJNI.IPLRenderingSettings_frameSize_set(swigCPtr, this, value);
  }

  public int getFrameSize() {
    return phononJNI.IPLRenderingSettings_frameSize_get(swigCPtr, this);
  }

  public void setConvolutionType(IPLConvolutionType value) {
    phononJNI.IPLRenderingSettings_convolutionType_set(swigCPtr, this, value.swigValue());
  }

  public IPLConvolutionType getConvolutionType() {
    return IPLConvolutionType.swigToEnum(phononJNI.IPLRenderingSettings_convolutionType_get(swigCPtr, this));
  }

  public IPLRenderingSettings() {
    this(phononJNI.new_IPLRenderingSettings(), true);
  }

}
